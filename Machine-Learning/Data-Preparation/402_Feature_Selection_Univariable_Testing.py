import pandas as pdmy_df = pd.read_csv("feature_selection_sample_data.csv")# Rgression Templatefrom sklearn.feature_selection import SelectKBest, f_regressionX = my_df.drop(["output"], axis = 1)Y = my_df["output"]feature_selector = SelectKBest(f_regression, k = "all")fit = feature_selector.fit(X,Y)fit.pvalues_fit.scores_p_values = pd.DataFrame(fit.pvalues_)scores = pd.DataFrame(fit.scores_)input_variable_names = pd.DataFrame(X.columns)summary_stats = pd.concat([input_variable_names, p_values, scores], axis =1)summary_stats.columns = ["input_variable", "p_value", "f_score"]summary_stats.sort_values(by = "p_value", inplace=True)p_value_threshold = 0.05scores_threshold  = 5 selected_variables = summary_stats.loc[(summary_stats["f_score"] >= scores_threshold) & (summary_stats["p_value"] <= p_value_threshold)]selected_variables = selected_variables["input_variable"].tolist()X_new = X[selected_variables]# Classification Templatefrom sklearn.feature_selection import SelectKBest, chi2X = my_df.drop(["output"], axis = 1)Y = my_df["output"]feature_selector = SelectKBest(chi2, k = "all")fit = feature_selector.fit(X,Y)fit.pvalues_fit.scores_p_values = pd.DataFrame(fit.pvalues_)scores = pd.DataFrame(fit.scores_)input_variable_names = pd.DataFrame(X.columns)summary_stats = pd.concat([input_variable_names, p_values, scores], axis =1)summary_stats.columns = ["input_variable", "p_value", "f_score"]summary_stats.sort_values(by = "p_value", inplace=True)p_value_threshold = 0.05scores_threshold  = 5selected_variables = summary_stats.loc[(summary_stats["chi2_score"] >= scores_threshold) & (summary_stats["p_value"] <= p_value_threshold)]selected_variables = selected_variables["input_variable"].tolist()X_new = X[selected_variables]